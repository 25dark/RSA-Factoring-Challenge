#!/usr/bin/python3

import random

def pollard_rho(n):
    # Choose a random number x in the range [2, n-2]
    x = random.randint(2, n - 2)
    # Choose a random number y in the range [2, n-2]
    y = random.randint(2, n - 2)
    # Set d to 1
    d = 1
    # While d is 1
    while d == 1:
        # Set x to (x^2 + y) % n
        x = (x ** 2 + y) % n
        # Set y to (y^2 + y) % n
        y = (y ** 2 + y) % n
        # Set y to (y^2 + y) % n
        y = (y ** 2 + y) % n
        # Calculate the greatest common divisor of |x - y| and n
        d = gcd(abs(x - y), n)
    # If d is equal to n, try again
    if d == n:
        return pollard_rho(n)
    # Return d and n // d
    return d, n // d

def gcd(a, b):
    # If b is 0, return a
    if b == 0:
        return a
    # Return the greatest common divisor of b and a % b
    return gcd(b, a % b)
